name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment for this job

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for authentication (if private repo)

      # Step 2: Debug Git configuration to help with troubleshooting
      - name: Debug Git configuration
        run: |
          echo "Git version:"
          git --version
          echo "Git configuration:"
          git config --list
          echo "Current Git branch:"
          git branch

      # Step 3: Set up Node.js environment (specify version)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify the Node.js version

      # Step 4: Cache node_modules to speed up future builds
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules  # Cache the node_modules directory
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}  # Cache key based on package-lock.json
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 5: Install dependencies
      - name: Install dependencies
        run: npm install  # Install dependencies using npm

      # Step 6: Run tests
      - name: Run tests
        run: npm test  # Run tests using the test script in package.json

      # Optional: Run linting if you have ESLint set up
      - name: Run ESLint
        run: npm run lint  # Run ESLint for code quality checks (if configured)

      # Optional: Build your project (if applicable)
      - name: Build project
        run: npm run build  # Run build script (adjust based on your project setup)

      # Optional: Deploy to your server (e.g., AWS EC2)
      # - name: Deploy to AWS
      #   run: |
      #     echo "Deploying to AWS EC2..."
      #     # Add your deployment script here (AWS CLI, SSH, etc.)
